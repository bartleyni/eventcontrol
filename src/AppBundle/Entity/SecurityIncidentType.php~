<?php

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 * Description of SecurityIncidentType
 *
 * @author Nick
 */

namespace AppBundle\Entity;

use Doctrine\ORM\Mapping as ORM;

/**
 * @ORM\Entity
 * @ORM\Table(name="securityincidenttype")
 */

class SecurityIncidentType {

    /**
     * @ORM\Column(type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    protected $id;
 
    /**
     * @ORM\Column(type="string", length=150)
     */
    protected $description;
    
    /**
     * @ORM\Column(type="integer")
     */
    protected $severity;
    
    /**
     * @ORM\OneToMany(targetEntity="SecurityLog", mappedBy="security_incidenttype")
     */
    private $securitylogs;
    
    public function __construct()
    {
        $this->securitylogs = new ArrayCollection();
    }

    /**
     * Get id
     *
     * @return integer
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set description
     *
     * @param string $description
     *
     * @return SecurityIncidentType
     */
    public function setDescription($description)
    {
        $this->description = $description;

        return $this;
    }

    /**
     * Get description
     *
     * @return string
     */
    public function getDescription()
    {
        return $this->description;
    }

    /**
     * Set severity
     *
     * @param integer $severity
     *
     * @return SecurityIncidentType
     */
    public function setSeverity($severity)
    {
        $this->severity = $severity;

        return $this;
    }

    /**
     * Get severity
     *
     * @return integer
     */
    public function getSeverity()
    {
        return $this->severity;
    }

    /**
     * Add securitylog
     *
     * @param \AppBundle\Entity\SecurityLog $securitylog
     *
     * @return SecurityIncidentType
     */
    public function addSecuritylog(\AppBundle\Entity\SecurityLog $securitylog)
    {
        $this->securitylogs[] = $securitylog;

        return $this;
    }

    /**
     * Remove securitylog
     *
     * @param \AppBundle\Entity\SecurityLog $securitylog
     */
    public function removeSecuritylog(\AppBundle\Entity\SecurityLog $securitylog)
    {
        $this->securitylogs->removeElement($securitylog);
    }

    /**
     * Get securitylogs
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getSecuritylogs()
    {
        return $this->securitylogs;
    }
}
