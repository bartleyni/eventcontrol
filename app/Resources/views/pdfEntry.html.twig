<html>
    <head>
        <link rel="stylesheet" href="{{ app.request.getSchemeAndHttpHost() ~ asset('assets/vendor/bootstrap/dist/css/bootstrap.min.css') }}">
        <link rel="stylesheet" href="http://eventcontrol.nb221.com/assets/vendor/bootstrap/dist/css/bootstrap.css">
        <style>
            #logMap {
                height: 300px;
                width: 400px;
            }
        </style>
    </head>
    <body>
        <div class="wrapper">
            <div class="row">
                <div class="col-md-12">
                    <h1>{{ event.name }} Event Control</h1>
                    {{ event.client }}<br>
                    Report Produced: {{ "now"|date('Y-m-d H:i:s', "Europe/London") }}
                    <h2>Log Entry ID:</h2> <h3>{{ entry.id }}</h3>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <div class="panel panel-primary">
                        <div class="panel-heading"><strong>Log Information</strong></div>
                        <div class="panel-body">
                            <strong>Operator: </strong>
                            {{ entry.operator }}<br>
                            <strong>Log Open Time (Submit Timestamp): </strong>
                            {{ entry.logEntryOpenTime|date('Y-m-d H:i:s', "Europe/London")}} ({{ entry.logTimestamp|date('Y-m-d H:i:s', "Europe/London") }})<br>
                            <strong>Short Description:</strong><br>
                            {{ entry.logBlurb }}<br>
                            <strong>Location: </strong>
                            {{ entry.location }}
                            {% if entry.latitude is not null %}
                                (<strong>GPS Co-ordinates: </strong>
                                {{ entry.latitude|number_format( 6, '.', '') }}, {{  entry.longitude|number_format( 6, '.', '') }}
                                {% if entry.geolocated is not null %}
                                    <strong>Geo-located: </strong>
                                    {{ entry.geolocated ? 'True' : 'False'}}
                                {% endif %}
                                )
                            {% endif %}<br>
                            <strong>Reported By: </strong>
                            {{ entry.reportedBy }}<br>
                        </div>
                    </div>
                    {% if entry.latitude is not null %}
                        <br>
                        <div id="logMap">
                            <img width="600" src="https://maps.googleapis.com/maps/api/staticmap?markers=color:blue%7Clabel:%7C{{ entry.latitude }},{{ entry.longitude }}&scale=false&size=600x400&maptype=satellite&format=png&visual_refresh=true&zoom=18&key=AIzaSyBCpMw_PcJRHplbVUskg0ltvmsCWxFyUPU" alt="Google Map of Entry">
                        </div>
                        <br>
                    {% endif %}
                    {% if general is null %}                      
                    {% else %}
                        <div class="panel panel-info" id="General">
                            <div class="panel-heading"><strong>General</strong></div>
                            <div class="panel-body">
                                <strong>Description:</strong><br>
                                {{ general.generalDescription }}<br>
                                <strong>Closed: </strong> {% if general.generalEntryClosedTime %} {{ general.generalEntryClosedTime|date('Y-m-d H:i:s', "Europe/London") }} {% endif %}
                            </div>
                        </div>
                    {% endif %}
                    {% if medical is null %}
                    {% else %}
                        <div class="panel panel-info" id="Medical">
                            <div class="panel-heading"><strong>Medical</strong></div>
                            <div class="panel-body">
                                <strong>Injury Type: </strong>
                                {{ medical.medicalReportedInjuryType }}<br>
                                <strong>Description:</strong><br>
                                {{ medical.medicalDescription }}<br>
                                <strong>Medical Response: </strong>
                                {{ medical.medicalResponse }}<br>
                                <strong>999 Required?: </strong>
                                {{ medical.nineNineNineRequired ? 'Yes':'No' }}<br>
                                <strong>Medical Treatment: </strong>
                                {{ medical.medicalTreatment }}<br>
                                <strong>Medical Resolution:</strong><br>
                                {{ medical.medicalResolution }}<br>
                                <strong>Notes:</strong><br>
                                {{ medical.medicalNotes }}<br>
                                <strong>Closed: </strong>{% if medical.medicalEntryClosedTime %}{{ medical.medicalEntryClosedTime|date('Y-m-d H:i:s', "Europe/London") }}{% endif %}<br>
                            </div>
                        </div>
                    {% endif %}
                    {% if security is null %}
                    {% else %}
                        <div class="panel panel-info" id="Security">
                            <div class="panel-heading"><strong>Security</strong></div>
                            <div class="panel-body">    
                                <strong>Security Log Type: </strong>
                                {{ security.securityLogType }}<br>
                                <strong>Security Incident Type: </strong>
                                {{ security.securityIncidentType }}<br>
                                <strong>Description:</strong><br>
                                {{ security.securityDescription }}<br>
                                <strong>Security Dispatched?: </strong>
                                {{ security.securityDispatched ? 'Yes':'No' }}<br>
                                <strong>Security Responded?: </strong>
                                {{ security.securityResponded ? 'Yes':'No' }}<br>
                                <strong>Security Resolution:</strong><br>
                                {{ security.securityResolution }}<br>
                                <strong>Closed: </strong>{% if security.securityEntryClosedTime %}{{ security.securityEntryClosedTime|date('Y-m-d H:i:s', "Europe/London") }} {% endif %}<br>          
                            </div>
                        </div>
                    {% endif %}
                    {% if lost is null %}
                    {% else %}
                        <div class="panel panel-info" id="Lost">
                            <div class="panel-heading"><strong>Lost Property</strong></div>
                            <div class="panel-body"> 
                                <strong>Item Lost? </strong>
                                {{ lost.lostPropertyItemLost ? 'Yes':'No' }}<br>
                                <strong>Item Found? </strong>
                                {{ lost.lostPropertyItemFound ? 'Yes':'No' }}<br>
                                <strong>Description:</strong><br>
                                {{ lost.lostPropertyDescription }}<br>
                                <strong>Contact Details:</strong><br>
                                {{ lost.lostPropertyContactDetails }}<br>
                                <strong>Lost Property Resolution: </strong>
                                {{ lost.lostPropertyResolution }}<br>
                                <strong>Resolution Description:</strong><br>
                                {{ lost.lostPropertyResolutionDescription }}<br>
                                <strong>Closed: </strong>{% if lost.lostPropertyEntryClosedTime %}{{ lost.lostPropertyEntryClosedTime|date('Y-m-d H:i:s', "Europe/London") }}{% endif %}<br>
                            </div>
                        </div>
                    {% endif %}
                </div>
            </div>
        </div>
    </body>
</html>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyD0L5FuS1PZXDw90PINaMckDeQyIj_em1M"></script>
<script type="text/javascript">
        //Map Overlay Below here
        {% if (entry.longitude is not null) and (entry.latitude is not null) %}
        
            /* 
            * To change this license header, choose License Headers in Project Properties.
            * To change this template file, choose Tools | Templates
            * and open the template in the editor.
            */
            var overlay;
            EventSiteOverlay.prototype = new google.maps.OverlayView();
            // Initialize the map and the custom overlay.
            function initMap() {
                var map = new google.maps.Map(document.getElementById('logMap'), {
                    zoom: 17,
                    center: {lat: {{ entry.latitude }}, lng: {{ entry.longitude }}},
                    mapTypeId: 'satellite'
                });
                var bounds = new google.maps.LatLngBounds(
                    new google.maps.LatLng({{ NEbound }}),
                    new google.maps.LatLng({{ SWbound }})
                );
                var srcImage = '{{ absolute_url('overlay', {'filename': overlayFileName}) }}';

                overlay = new EventSiteOverlay(bounds, srcImage, map);
                var marker = new google.maps.Marker({
                    position: {lat:{{ entry.latitude }}, lng:{{ entry.longitude }}},
                    map: map
                });
            }
            /** @constructor */
            function EventSiteOverlay(bounds, image, map) {
                // Initialize all properties.
                this.bounds_ = bounds;
                this.image_ = image;
                this.map_ = map;
                // Define a property to hold the image's div. We'll
                // actually create this div upon receipt of the onAdd()
                // method so we'll leave it null for now.
                this.div_ = null;
                // Explicitly call setMap on this overlay.
                this.setMap(map);
            }
            /**
             * onAdd is called when the map's panes are ready and the overlay has been
             * added to the map.
             */
            EventSiteOverlay.prototype.onAdd = function() {
                var div = document.createElement('div');
                div.style.borderStyle = 'none';
                div.style.borderWidth = '0px';
                div.style.position = 'absolute';
                // Create the img element and attach it to the div.
                var img = document.createElement('img');
                img.src = this.image_;
                img.style.width = '100%';
                img.style.height = '100%';
                img.style.position = 'absolute';
                div.appendChild(img);
                this.div_ = div;
                // Add the element to the "overlayLayer" pane.
                var panes = this.getPanes();
                panes.overlayLayer.appendChild(div);
            };
            EventSiteOverlay.prototype.draw = function() {
                // We use the south-west and north-east
                // coordinates of the overlay to peg it to the correct position and size.
                // To do this, we need to retrieve the projection from the overlay.
                var overlayProjection = this.getProjection();
                // Retrieve the south-west and north-east coordinates of this overlay
                // in LatLngs and convert them to pixel coordinates.
                // We'll use these coordinates to resize the div.
                var sw = overlayProjection.fromLatLngToDivPixel(this.bounds_.getSouthWest());
                var ne = overlayProjection.fromLatLngToDivPixel(this.bounds_.getNorthEast());
                // Resize the image's div to fit the indicated dimensions.
                var div = this.div_;
                div.style.left = sw.x + 'px';
                div.style.top = ne.y + 'px';
                div.style.width = (ne.x - sw.x) + 'px';
                div.style.height = (sw.y - ne.y) + 'px';
                div.style.opacity = "0.7";
            };
            // The onRemove() method will be called automatically from the API if
            // we ever set the overlay's map property to 'null'.
            EventSiteOverlay.prototype.onRemove = function() {
                this.div_.parentNode.removeChild(this.div_);
                this.div_ = null;
            };
            google.maps.event.addDomListener(window, 'load', initMap);
        {% endif %}
        </script>
