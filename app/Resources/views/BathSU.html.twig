{% extends 'CtrLogBase.html.twig' %}

{% block title 'Event Control' %}

{% block stylesheets %}
<link rel="stylesheet" href="{{ asset('assets/vendor/bootstrap/dist/css/bootstrap.min.css') }}">
<link rel="stylesheet" href="{{ asset('assets/vendor/eonasdan-bootstrap-datetimepicker/build/css/bootstrap-datetimepicker.min.css') }}" />
<link rel="stylesheet" href="{{ asset('assets/vendor/easy-autocomplete/easy-autocomplete.min.css') }}" />
<style>
.severity1 {
    background-color: #E50D00;
    color: #FFFFFF;
}
.severity2 {
    background-color: #DF7200;
    color: #FFFFFF;
}
.severity3 {
    background-color: #D9D100;
    color: #FFFFFF;
}
.severity4 {
    background-color: #7CD300;
    color: #FFFFFF;
}
.severity5 {
    background-color: #1CCE00;
    color: #FFFFFF;
}
/* Modification to bootstrap css */
.page-header {
    padding-bottom: 0px;
    margin: 0px 0px 0px 0px;
    border-bottom: 1px solid #eee;
    position: fixed;
    right: 0;
    left: 0;
    top: 0;
    border-width: 0 0 1px;
    z-index: 1030;
    padding-right: 20px;
    padding-left: 15px;
    background-color: #FFFFFF;
    max-height: 220px;
}

.alert {
  padding: 10px;
  margin-bottom: 2px;
  border: 1px solid transparent;
  border-radius: 4px;
}

@-webkit-keyframes argh-my-eyes {
    0%   { background-color: #d9534f; }
    49% { background-color: #d9534f; }
    50% { background-color: white; }
    99% { background-color: white; }
    100% { background-color: #d9534f; }
}
@-moz-keyframes argh-my-eyes {
    0%   { background-color: #d9534f; }
    49% { background-color: #d9534f; }
    50% { background-color: white; }
    99% { background-color: white; }
    100% { background-color: #d9534f; }
}
@keyframes argh-my-eyes {
    0%   { background-color: #d9534f; }
    49% { background-color: #d9534f; }
    50% { background-color: white; }
    99% { background-color: white; }
    100% { background-color: #d9534f; }
}
.flash {
    -webkit-animation: argh-my-eyes 1s infinite;
    -moz-animation:    argh-my-eyes 1s infinite;
    animation:         argh-my-eyes 1s infinite;
}
</style>
{% endblock %}

{% block headertop %}
    Event Control
{% endblock %}

{% block hiddenheadertop %}
    <div class="container-fluid">
        <div class="col-md-5">
            <h1> Event Control</h1>
        </div>
        <div class="col-md-3">
            {% if app.user %}
                <h4>
                    <div id="HeaderWeather">
                    </div>
                </h4>
            {% endif %}
        </div>
        <div class="col-md-4">
            {% if app.user %}
                <h1>
                    <div id="HeaderClock">
                    </div>
                </h1>
            {% endif %}
        </div>
    </div>
{% endblock %}


{% block javascripts %}
    <script type="text/javascript" src="{{ asset('assets/vendor/jquery/dist/jquery.min.js') }}"></script>
    <script type="text/javascript" src="{{ asset('assets/vendor/moment/min/moment.min.js') }}"></script>
    <script type="text/javascript" src="{{ asset('assets/vendor/bootstrap/dist/js/bootstrap.min.js') }}"></script>
    <script type="text/javascript" src="{{ asset('assets/vendor/eonasdan-bootstrap-datetimepicker/build/js/bootstrap-datetimepicker.min.js') }}"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/mousetrap/1.4.6/mousetrap.min.js"></script>
    <script type="text/javascript" src="{{ asset('assets/vendor/easy-autocomplete/jquery.easy-autocomplete.min.js') }}"></script>
    <script type="text/javascript">
    
        var alertData = null;
        //var oldAlertData = null;
        var display = false;
        var alertNumber = 0;
        var alertCurrent = 0;
        var alertCurrentLength = 0;
        
        function resizeHeader() {
            $(".page-header-push").height($(".page-header").height()+3);
        }
        $(document).ready(resizeHeader);
        $(window).resize(resizeHeader);
        
        {% if app.user %}
            function updateClock ( )
                {
                var currentTime = new Date ( );
                var currentHours = currentTime.getHours ( );
                var currentMinutes = currentTime.getMinutes ( );
                var currentSeconds = currentTime.getSeconds ( );

                // Pad the minutes and seconds with leading zeros, if required
                currentMinutes = ( currentMinutes < 10 ? "0" : "" ) + currentMinutes;
                currentSeconds = ( currentSeconds < 10 ? "0" : "" ) + currentSeconds;

                // Choose either "AM" or "PM" as appropriate
                var timeOfDay = ( currentHours < 12 ) ? "AM" : "PM";

                // Convert the hours component to 12-hour format if needed
                currentHours = ( currentHours > 12 ) ? currentHours - 12 : currentHours;

                // Convert an hours component of "0" to "12"
                currentHours = ( currentHours == 0 ) ? 12 : currentHours;

                // Compose the string for display
                //var currentTimeString = currentHours + ":" + currentMinutes + ":" + currentSeconds + " " + timeOfDay;
                var currentTimeString = currentTime.toLocaleString('en-GB');

                $("#HeaderClock").html(currentTimeString);

            }

            function updateWeatherWarning ( )
                {
                    $.ajax({
                    type:'POST',
                    url: '{{ path('event_weather_warning') }}',
                    cache: false,
                    global: false,
                    success:function(data)
                        {
                            $("#HeaderWeather").html(data);
                            if(data == '') {
                                $('#HeaderWeather').hide(500);
                            } else {
                                $('#HeaderWeather').show(500);
                            }
                            setTimeout(function(){
                                resizeHeader();
                            }, 502);
                            
                        }
                    });
                }
                
            function AlertUpdate()
                {
                $.getJSON('{{ path('Alert_Queue') }}', function(data) {
                    alertData = data;
                });
            }
            
            function AlertCheck()
            {
                if(alertData && display === false)
                {
                    loadAlertModal(alertData, 0);
                    alertNumber=0;
                } else if(alertData && alertCurrent !== alertNumber){
                    loadAlertModal(alertData, alertNumber);
                } else if(alertData && alertCurrentLength !== alertData.length){
                    loadAlertModal(alertData, alertNumber);
                }
            }
            
            function loadAlertModal(alerts, i)
            {        
                if(alerts.length <= 1)
                {
                    $('#mainModalFooter').html('<button type="button" class="btn btn-primary" onclick="Acknowledge('+alerts[i].id+');">Acknowledge</button>');
                } else {
                    if(i-1 < 0)
                    {
                        $('#mainModalFooter').html('<button type="button" class="btn btn-default" id="alerts-next" onclick="nextAlert();">Next</button><button type="button" class="btn btn-primary" onclick="Acknowledge('+alerts[i].id+');">Acknowledge</button>');
                    } else if(i+1 >= alerts.length) {
                        $('#mainModalFooter').html('<button type="button" class="btn btn-default" id="alerts-previous" onclick="previousAlert();">Previous</button><button type="button" class="btn btn-primary" onclick="Acknowledge('+alerts[i].id+');">Acknowledge</button>');
                    } else {
                        $('#mainModalFooter').html('<button type="button" class="btn btn-default" id="alerts-previous" onclick="previousAlert();">Previous</button><button type="button" class="btn btn-default" id="alerts-next" onclick="nextAlert();">Next</button><button type="button" class="btn btn-primary" onclick="Acknowledge('+alerts[i].id+');">Acknowledge</button>');    
                    }
                }
                $('#mainModalLabel').html(alerts[i].title);
                $('#mainModalBody').html(alerts[i].message);
                $('#mainModal').modal('show');
                alertCurrentLength = alerts.length;
                alertCurrent = i;
                display = true;
            }
    
            function nextAlert()
            {
                alertNumber = alertNumber+1;
                AlertCheck();
            }

            function previousAlert()
            {
                alertNumber = alertNumber-1;
                AlertCheck();
            }
            
            function Acknowledge(alertID)
            {
                var url = "{{ path('Alert_Ack') }}/"+alertID;
                $.post(url);
                if(alertnumber > 0){
                    alertNumber = alertNumber-1;
                }
                AlertCheck();
            }

            $(document).ready(function()
            {
                $('#HeaderWeather').hide();
                
                updateClock();
                updateWeatherWarning();
                setInterval('updateClock()', 1000);
                setInterval('AlertUpdate()', 5000);
                setInterval('AlertCheck()', 2000);
                setInterval('updateWeatherWarning()', 30000);
            });

            $(document).ready(function()
            {
                Mousetrap.bind('ctrl+e', function(e) {
                       e.preventDefault();
                       window.location.href = "{{ path('new_entry') }}";
                });
            });
        {% endif %}
    </script>
    
{% endblock %}
